apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'kotlin-allopen'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        debug {
            keyAlias keystoreProperties['debugKeyAlias']
            keyPassword keystoreProperties['debugKeyPassword']
            storeFile file(rootDir.getCanonicalPath() + '/' + keystoreProperties['debugKeyStore'])
            storePassword keystoreProperties['debugStorePassword']
        }


        release {
            keyAlias keystoreProperties['releaseKeyAlias']
            keyPassword keystoreProperties['releaseKeyPassword']
            storeFile file(rootDir.getCanonicalPath() + '/' + keystoreProperties['releaseKeyStore'])
            storePassword keystoreProperties['releaseStorePassword']
        }
    }

    compileSdkVersion androidCompileSdkVersion
    defaultConfig {
        applicationId "io.kamara.xkcd.daily"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            debuggable true
        }

        qa {
            applicationIdSuffix ".qa"
            versionNameSuffix "-qa"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    // Gradle automatically adds 'android.test.runner' as a dependency.
    useLibrary 'android.test.runner'

    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

dependencies {
    implementation libraries.kotlinStdLib
    implementation libraries.ktxCore
    implementation libraries.appCompat
    implementation libraries.constraintLayout
    implementation libraries.materialDesign
    implementation libraries.timber
    implementation libraries.lifecycleExtensions
    implementation libraries.retrofitGSon

    implementation libraries.roomRuntime
    kapt libraries.roomCompiler

    implementation libraries.glide
    kapt libraries.glideCompiler

    implementation libraries.dagger
    kapt libraries.daggerCompiler

    implementation libraries.daggerAndroid
    implementation libraries.daggerAndroidSupport
    kapt libraries.daggerAndroidCompiler

    implementation libraries.photoView
    implementation libraries.firebaseAnalytics

    testImplementation testLibraries.junit4
    testImplementation testLibraries.mockitoCore

    androidTestImplementation testLibraries.testRunner
    androidTestImplementation testLibraries.espressoCore
    androidTestImplementation testLibraries.archCoreTesting
    androidTestImplementation testLibraries.mockitoCore
    androidTestImplementation testLibraries.mockitoAndroid

    testImplementation 'org.mockito:mockito-inline:2.13.0'

}

apply plugin: 'com.google.gms.google-services'
